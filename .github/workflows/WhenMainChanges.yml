name: Build APP 
run-name: ${{ github.actor }} is Building the APP ðŸš€
on:
#Delete this , just for test
  pull_request:
    types: [opened,reopened,edited,synchronize]
    branches:
      - main
    paths:
      - '**'


  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
    Run-tests-on:
      name: Run npm test
      runs-on: macos-latest
      permissions:
        contents: write
        pull-requests: write
        
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Install the Apple certificate and provisioning profile
          env:
            BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
            DIST_CERTIFICATE_BASE64: ${{ secrets.DIST_CERTIFICATE_BASE64 }}
            P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
            BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
            BUILD_ENT_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_ENT_PROVISION_PROFILE_BASE64 }}
            KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          run: |
              # create variables
              CERTIFICATE_PATH=$RUNNER_TEMP/dist_certificate.cer
              PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
              KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
  
              # import certificate and provisioning profile from secrets
              # echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
              echo -n "$DIST_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
              echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
              echo -n "$BUILD_ENT_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH 

              # create temporary keychain
              security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
              security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
              security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
  
              # import certificate to keychain
              #security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
              security import $CERTIFICATE_PATH -A -t cert -f x509 -k $KEYCHAIN_PATH
              security find-certificate  $KEYCHAIN_PATH
              security set-key-partition-list -S apple-tool:,iOS: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
              security list-keychain -d user -s $KEYCHAIN_PATH
  
              # apply provisioning profile
              mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
              cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
  
        - name: Seek Cert
          run: |  
                security find-identity -p codesigning -v
                ls ~/Library/MobileDevice/Provisioning\ Profiles/
    
        - name: Build .ipa file
          env:
            OUTPUT_PATH: ./build
          run: |
                xcodebuild  \
                           -scheme EsmorgaiOS \
                           -sdk iphoneos \
                           -configuration Release \
                           -archivePath $OUTPUT_PATH/EsmorgaiOS.xcarchive \
                           clean archive
        
                xcodebuild -exportArchive \
                           -archivePath $OUTPUT_PATH/EsmorgaiOS.xcarchive \
                           -exportPath $OUTPUT_PATH \
                           -exportOptionsPlist ExportOptions.plist
                ls $OUTPUT_PATH/*.ipa
        - name: Clean up keychain and provisioning profile
          if: ${{ always() }}
          run: |
                  security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
                  rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
#        - name: Test 
#          run: 
#            |
#              xcodebuild test  -scheme EsmorgaiOS -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' ONLY_ACTIVE_ARCH=YES
